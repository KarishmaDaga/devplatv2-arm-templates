{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "String",
      "metadata": {
        "description": "Specifies the name of the Azure Machine Learning Workspace which will contain this job."
      }
    },
    "jobName": {
      "defaultValue": "testCommandJob",
      "type": "String"
    },
    "experimentName": {
      "defaultValue": "Default",
      "type": "String",
      "metadata": {
        "description": "The name of the experiment the job belongs to. If not set, the job is placed in the 'Default' experiment."
      }
    },
    "displayName": {
      "type": "String",
      "metadata": {
        "description": "The display name the job belongs to."
      }
    },
    "commandJobDescription": {
      "defaultValue": "A command job created by an ARM template",
      "type": "String"
    },
    "command": {
      "defaultValue": "python train.py",
      "minLength": 1,
      "type": "String",
      "metadata": {
        "description": "The command to execute on startup of the job. eg. 'python train.py'"
      }
    },
    "codeAssetName": {
      "type": "String"
    },
    "codeAssetVersion": {
      "defaultValue": "1",
      "type": "String"
    },
    "computeName": {
      "type": "String"
    },
    "computeInstanceCount": {
      "defaultValue": 1,
      "type": "Int",
      "metadata": {
        "description": "Optional number of instances or nodes used by the compute target."
      }
    },
    "computeInstanceType": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional type of VM used as supported by the compute target."
      }
    },
    "environmentName": {
      "defaultValue": "",
      "type": "String"
    },
    "environmentVersion": {
      "defaultValue": "1",
      "type": "String"
    },
    "datasetAssetName": {
      "defaultValue": "",
      "type": "String"
    },
    "datasetAssetVersion": {
      "defaultValue": "1",
      "type": "String"
    },
    "inputs": {
      "defaultValue": {
        "datasetBinding": {
          "jobInputType": "Dataset",
          "datasetId": "[resourceId('Microsoft.MachineLearningServices/workspaces/datasets/versions', parameters('workspaceName'),parameters('datasetAssetName'), parameters('datasetAssetVersion'))]",
          "mode": "ReadOnlyMount"
        },
        "literalBinding": {
          "jobInputType": "Literal",
          "value": "1"
        }
      },
      "type": "Object",
      "metadata": {
        "description": "Mapping of input data bindings used in the job. The default is an example job input object."
      }
    },
    "outputs": {
      "defaultValue": {
        "datasetOutput": {
          "jobOutputType": "Dataset",
          "mode": "ReadWriteMount"
        },
        "azureBlobOutput": {
          "jobOutputType": "Uri"
        }
      },
      "type": "Object",
      "metadata": {
        "description": "Mapping of output data bindings used in the job. The default is an example job output object."
      }
    },
    "distributionConfigurationType": {
      "allowedValues": [
        "Mpi",
        "Tensorflow",
        "PyTorch"
      ],
      "type": "String",
      "metadata": {
        "description": "Enum to determine the job distribution type."
      }
    },
    "processCountPerInstance": {
      "defaultValue": 1,
      "type": "Int",
      "metadata": {
        "description": "Number of processes per node."
      }
    },
    "tensorflowWorkerCount": {
      "defaultValue": 1,
      "type": "Int",
      "metadata": {
        "description": "Number of workers. If not specified, will default to the instance count."
      }
    },
    "tensorflowParameterServerCount": {
      "defaultValue": 0,
      "type": "Int",
      "metadata": {
        "description": "Number of parameter server tasks."
      }
    },
    "jobLimitTimeout": {
      "defaultValue": "PT5S",
      "type": "String",
      "metadata": {
        "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds."
      }
    }
  },
  "variables": {
    "codeVersionResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces/codes/versions', parameters('workspaceName'), parameters('codeAssetName'), parameters('codeAssetVersion'))]",
    "computeResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('workspaceName'), parameters('computeName'))]",
    "environmentResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces/environments/versions', parameters('workspaceName'), parameters('environmentName'), parameters('environmentVersion'))]",
    "distributionType": {
      "Mpi": {
        "distributionType": "Mpi",
        "processCountPerInstance": "[parameters('processCountPerInstance')]"
      },
      "Tensorflow": {
        "distributionType": "Tensorflow",
        "workerCount": "[parameters('tensorflowWorkerCount')]",
        "parameterServerCount": "[parameters('tensorflowParameterServerCount')]"
      },
      "PyTorch": {
        "distributionType": "Pytorch",
        "processCountPerInstance": "[parameters('processCountPerInstance')]"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.MachineLearningServices/workspaces/jobs",
      "apiVersion": "2021-10-01",
      "name": "[concat(parameters('workspaceName'), '/', parameters('jobName'))]",
      "properties": {
        "jobType": "Command",
        "displayName": "[parameters('jobName')]",
        "experimentName": "[parameters('experimentName')]",
        "description": "[parameters('commandJobDescription')]",
        "codeId": "[variables('codeVersionResourceId')]",
        "computeId": "[variables('computeResourceId')]",
        "environmentId": "[if(equals(parameters('environmentName'),''), json('null'), variables('environmentResourceId'))]",
        "inputs": "[parameters('inputs')]",
        "outputs": "[parameters('outputs')]",
        "command": "[parameters('command')]",
        "distribution": "[variables('distributionType')[parameters('distributionConfigurationType')]]",
        "resources": {
          "instanceCount": "[parameters('computeInstanceCount')]",
          "instanceType": "[parameters('computeInstanceType')]",
          "properties": {}
        },
        "limits": {
          "jobLimitsType": "Command",
          "timeout": "[parameters('jobLimitTimeout')]"
        },
        "properties": {},
        "tags": {}
      }
    }
  ]
}
